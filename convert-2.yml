trigger:
  branches:
    include:
      - main

stages:
- stage: Build
  jobs:
  - job: BuildJob
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UseNode@2
      inputs:
        version: '14.x'
    - script: npm install
      displayName: 'Install dependencies'
    - script: npm test
      displayName: 'Run tests'
    - script: npm run build
      displayName: 'Build project'

- stage: Deploy
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployToDev
    environment: 'dev'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo "Deploying to Development"
            displayName: 'Deploy to Development'
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'your-azure-subscription'
              appName: 'your-app-name'
              package: '$(Build.ArtifactStagingDirectory)/drop'

  - deployment: DeployToProd
    environment: 'prod'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      canary:
        increments: 2
        interval: 5m
        deploy:
          steps:
          - script: echo "Deploying to Production"
            displayName: 'Deploy to Production'
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'your-azure-subscription'
              appName: 'your-app-name'
              package: '$(Build.ArtifactStagingDirectory)/drop'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))

- stage: PostDeployment
  dependsOn: Deploy
  condition: succeeded()
  jobs:
  - job: Notify
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: echo "Deployment complete"
      displayName: 'Notify team'
    - task: SlackNotification@1
      inputs:
        slackConnection: 'your-slack-connection'
        message: 'Deployment to production is complete.'
